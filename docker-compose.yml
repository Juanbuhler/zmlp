version: "3.6"
services:
  # Postgres instance used for local development servers.
  postgres:
    image: "postgres:9.6.20"
    ports:
      - "5432:5432"
    volumes:
      - ./dev/postgres_init_scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      PGDATA: /var/lib/postgresql/data/pgdata

  redis:
    image: redis:alpine
    ports:
      - 6379:6379

  pubsub:
    image: google/cloud-sdk
    ports:
      - '8085:8085'
    command: ["gcloud", "beta", "emulators", "pubsub", "start", "--host-port", "0.0.0.0:8085"]

  # MinIO object storage service.
  minio:
    image: "minio/minio:RELEASE.2020-02-07T23-28-16Z"
    ports:
      - "9000:9000"
    command: server /data
    environment:
      MINIO_ACCESS_KEY: qwerty123
      MINIO_SECRET_KEY: 123qwerty

  # Elastic Search instance used for local development servers.
  elasticsearch:
    image: boonai/elasticsearch:latest
    build:
      context: services/elasticsearch
      args:
        node_type: single
        MINIO_ACCESS_KEY: qwerty123
        MINIO_SECRET_KEY: 123qwerty
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: "single-node"
      discovery.zen.minimum_master_nodes: "1"
      cluster.name: "boonai-cluster"
      network.host: "0.0.0.0"
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      MINIO_URL: http://minio:9000
      MINIO_DEFAULT_PROTOCOL: http

  swivel:
    image: boonai/swivel:latest
    build:
      context: services/swivel
    environment:
      PUBSUB_EMULATOR_HOST: pubsub:8085
      GCLOUD_PROJECT: localdev
      SWIVEL_SUBSCRIPTION: webhooks
    depends_on:
      - pubsub

  eshq:
    image: elastichq/elasticsearch-hq
    ports:
      - "5001:5000"
    depends_on:
      - elasticsearch

  # API Gateway
  api-gateway:
    image: boonai/api-gateway:latest
    build:
      context: services/api-gateway
    depends_on:
      - auth-server
      - archivist
      - ml-bbq
    ports:
      - 8080:80
    environment:
      ARCHIVIST_HOST: archivist:8080
      AUTH_SERVER_HOST: auth-server:9090
      MLBBQ_SERVER_HOST: ml-bbq:8282

  ml-bbq:
    image: boonai/ml-bbq:latest
    depends_on:
      - jvm-common
      - plugins-analysis
    ports:
      - "8282:8282"
    build:
      context: services/mlbbq
    environment:
      BOONAI_SECURITY_AUTHSERVER_URL : http://auth-server:9090

  # Auth server
  auth-server:
    image: boonai/auth-server:latest
    depends_on:
      - postgres
      - minio
      - jvm-common
    ports:
      - "9090:9090"
    build:
      context: services/auth-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/zorroa?currentSchema=auth
      BOONAI_SECURITY_INCEPTION_KEY: ewogICAgIm5hbWUiOiAiYWRtaW4ta2V5IiwKICAgICJwcm9qZWN0SWQiOiAiMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIiwKICAgICJpZCI6ICI0MzM4YTgzZi1hOTIwLTQwYWItYTI1MS1hMTIzYjE3ZGYxYmEiLAogICAgImFjY2Vzc0tleSI6ICJSRGMyTmtFeVFVWXRRakJHUXkwMFFVVkVMVGsxTVRZdE9UVTBOME5DTXpOQ05rTTJDZyIsCiAgICAic2VjcmV0S2V5IjogInBjZWtqRFZfaXBTTVhBYUJxcXRxNkp3eTVGQU1uamVoVVFyTUVoYkc4VzAxZ2lWcVZMZkVOOUZkTUl2enUwcmIiLAogICAgInBlcm1pc3Npb25zIjogW10KfQoK
      BOONAI_STORAGE_SYSTEM_ACCESSKEY: qwerty123
      BOONAI_STORAGE_SYSTEM_SECRETKEY: 123qwerty
      JAVA_OPTS: "-Xms1g -Xmx1g -XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=70 -XX:G1HeapRegionSize=16m"

  # Local Archivist server.
  archivist:
    image: boonai/archivist:latest
    depends_on:
      - elasticsearch
      - postgres
      - minio
      - jvm-common
      - redis
    environment:
      SENTRY_ENVIRONMENT: localdev
      BOONAI_STORAGE_PROJECT_ACCESSKEY: qwerty123
      BOONAI_STORAGE_PROJECT_SECRETKEY: 123qwerty
      BOONAI_STORAGE_SYSTEM_URL: http://minio:9000
      BOONAI_STORAGE_SYSTEM_ACCESSKEY: qwerty123
      BOONAI_STORAGE_SYSTEM_SECRETKEY: 123qwerty
      BOONAI_STORAGE_PROJECT_URL: http://minio:9000
      ANALYST_SHAREDKEY: 8248911982254469B56C849A29CE0E0F
      ARCHIVIST_DEEP_VIDEO_ANALYSIS_ENABLED: "true"
      BOONAI_SECURITY_AUTHSERVER_SERVICEKEY: ewogICAgImFjY2Vzc0tleSI6ICJSRGMyTmtFeVFVWXRRakJHUXkwMFFVVkVMVGsxTVRZdE9UVTBOME5DTXpOQ05rTTJDZyIsCiAgICAic2VjcmV0S2V5IjogInBjZWtqRFZfaXBTTVhBYUJxcXRxNkp3eTVGQU1uamVoVVFyTUVoYkc4VzAxZ2lWcVZMZkVOOUZkTUl2enUwcmIiCn0KCg==
      JAVA_OPTS: "-Xms1g -Xmx1g -XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=70 -XX:G1HeapRegionSize=16m -Xverify:none"
      PUBSUB_EMULATOR_HOST: pubsub:8085
      GCLOUD_PROJECT: localdev
    build:
      context: services/archivist
    volumes:
      - "./dev/config/monitoring:/monitoring"
      - "./dev/config/archivist/application.properties:/service/config/application.properties"

  officer:
    image: boonai/officer:latest
    depends_on:
      - jvm-common
      - minio
      - redis
    build:
      context: services/officer
    ports:
      - 7078:7078
    environment:
      BOONAI_STORAGE_PROJECT_URL: http://minio:9000
      BOONAI_STORAGE_PROJECT_ACCESSKEY: qwerty123
      BOONAI_STORAGE_PROJECT_SECRETKEY: 123qwerty
      BOONAI_STORAGE_CLIENT: minio
      REDIS_HOST: redis:6379

  analyst:
    image: boonai/analyst:latest
    depends_on:
      - archivist
      - boonflow
    build:
      context: services/analyst
    ports:
      - 5000:5000
    volumes:
      - "/tmp:/tmp"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      ANALYST_DOCKER_PULL: "false"
      ANALYST_SHAREDKEY: 8248911982254469B56C849A29CE0E0F
      BOONAI_SERVER: http://archivist:8080
      OFFICER_URL: ws://officer:7078
      BOONAI_BILLING_METRICS_SERVICE: http://metrics

  # Console web application.
  wallet:
    image: boonai/wallet:latest
    ports:
      - 80:80
    build:
      context: .
      dockerfile: applications/wallet/Dockerfile
      args:
        CI_COMMIT_SHA: $CI_COMMIT_SHA
    environment:
      DJANGO_SETTINGS_MODULE: wallet.settings
      DEBUG: "true"
      BROWSABLE: "true"
      PG_HOST: postgres
      BOONAI_API_URL: http://api-gateway:80
      INCEPTION_KEY_B64: ewogICAgImFjY2Vzc0tleSI6ICJSRGMyTmtFeVFVWXRRakJHUXkwMFFVVkVMVGsxTVRZdE9UVTBOME5DTXpOQ05rTTJDZyIsCiAgICAic2VjcmV0S2V5IjogInBjZWtqRFZfaXBTTVhBYUJxcXRxNkp3eTVGQU1uamVoVVFyTUVoYkc4VzAxZ2lWcVZMZkVOOUZkTUl2enUwcmIiCn0KCg==
      GOOGLE_OAUTH_CLIENT_ID: 980622341235-39kks0r3pkl0iotcb8mt6iclbvj98mml
      SUPERADMIN: "true"
      ENVIRONMENT: localdev
      ENABLE_SENTRY: "false"
      USE_MODEL_IDS_FOR_LABEL_FILTERS: "true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      - postgres
      - api-gateway

  # Metric Collection Service.
  metrics:
    image: boonai/metrics:latest
    ports:
      - 8585:80
    build:
      context: .
      dockerfile: services/metrics/Dockerfile
    environment:
      DJANGO_SETTINGS_MODULE: metrics.settings
      LOG_REQUESTS: "true"
      DEBUG: "true"
      DB_BACKEND: postgres
      PG_DB_HOST: postgres
      PG_DB_PASSWORD: 2mAPDWhuiYdIW69u
      BROWSABLE: "true"
    depends_on:
      - postgres

  # These services are only here because their images need to be built.
  jvm-common:
    image: boonai/jvm-common:latest
    build:
      context: services/jvm-common
    command: echo

  py3-base:
    image: boonai/py3-base:latest
    build:
      context: containers/py3-base
    command: echo

  boonsdk:
    image: boonai/boonsdk:latest
    depends_on:
      - py3-base
    build:
      context: client/boonsdk
    command: echo

  boonlab:
    image: boonai/boonlab:latest
    depends_on:
      - boonsdk
    build:
      context: client/boonlab
    command: echo

  boonflow:
    image: boonai/boonflow:latest
    depends_on:
      - boonsdk
    build:
      context: containers/boonflow
    command: echo

  boondocks:
    image: boonai/boondocks:latest
    depends_on:
      - boonflow
    build:
      context: containers/boondocks
    command: echo

  plugins-core:
    image: boonai/plugins-core:latest
    depends_on:
      - boondocks
    build:
      context: containers/plugins-core
    command: echo

  plugins-models:
    image: boonai/plugins-models:latest
    depends_on:
      - boondocks
    build:
      context: containers/plugins-models
    command: echo

  plugins-train:
    image: boonai/plugins-train:latest
    depends_on:
      - plugins-models
    build:
      context: containers/plugins-train
    command: echo

  plugins-analysis:
    image: boonai/plugins-analysis:latest
    depends_on:
      - plugins-models
    build:
      context: containers/plugins-analysis
    command: echo

  reporter:
    image: boonai/reporter:latest
    depends_on:
      - py3-base
    build:
      context: .
      dockerfile: services/reporter/Dockerfile
    command: echo
