
version: '3.6'
services:

  ## Unit testing services.

  # Elastic Search instance used by the unit tests.
  test-es:
    build:
      context: elasticsearch
      args:
        node_type: single
    ports:
      - "39200:9200"
      - "39300:9300"
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"

  # Elastic Search instance used for local development servers.
  es:
    build:
      context: elasticsearch
      args:
        node_type: single
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: "single-node"
      discovery.zen.minimum_master_nodes: "1"
      cluster.name: "zorroa-es-cluster"
      network.host: "0.0.0.0"
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"

  # Grafana server connected to elasticsearch instance
  grafana:
    links:
       - "es"
    image: "grafana/grafana"
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_DEFAULT_THEME: dark
      # GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    volumes:
      - "./grafana/provisioning:/etc/grafana/provisioning"
      - "./grafana/dashboards:/var/lib/grafana/dashboards"

  # Postgres instance used for local development servers.
  postgres:
    image: "postgres:9.6.9"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: zorroa
      POSTGRES_USER: zorroa
      POSTGRES_DB: zorroa
      PGDATA: /var/lib/postgresql/data/pgdata

  # Local Logstash server.
  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.2.4
    depends_on:
      - "es"
    ports:
      - "5044:5044"
      - "9600:9600"
    secrets:
      - source: logstash.conf
        target: /usr/share/logstash/pipeline/logstash.conf
    healthcheck:
      test: bin/logstash -t
      interval: 60s
      timeout: 50s
      retries: 5
    environment:
        LS_JAVA_OPTS: "-Xms256m -Xmx512m"

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.2.4
    secrets:
      - source: kibana.yml
        target: /usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    depends_on:
      - "es"

  filebeat:
    image: "docker.elastic.co/beats/filebeat:6.5.4"
    command: filebeat -e -strict.perms=false
    user: root
    secrets:
      - source: filebeat.yml
        target: /usr/share/filebeat/filebeat.yml
    depends_on:
      - "es"
    ports:
      - "5066:5066"
    volumes:
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  # Local Archivist server.
  archivist:
    links:
       - "es"
       - "postgres"
    build:
      context: archivist
    ports:
      - 8080:8080
    volumes:
      - "./localdev/shared:/shared"
      - "./localdev/zorroa-archivist-config:/config"
      - "./archivist/target:/service"
      - "../zorroa-test-data:/zorroa-test-data"

  # Local Analyst server.
  analyst:
    build: ../zorroa-plugin-sdk
    links:
       - "archivist"
    ports:
      - 5000:5000
    volumes:
      - "./localdev/shared:/shared"
      - "../zorroa-test-data:/zorroa-test-data"

  curator:
     build: ../zorroa-js-curator
     user: node
     ports:
       - 80:8081
       - 443:8443
     environment:
         NODE_ENV: "production"
         ARCHIVIST_API_URL: "http://archivist:8080"
         CURATOR_PORT_SECURE: "8443"

secrets:
  logstash.conf:
    file: ./config/logstash.conf
  kibana.yml:
    file: ./config/kibana.yml
  filebeat.yml:
    file: ./config/filebeat.yml
