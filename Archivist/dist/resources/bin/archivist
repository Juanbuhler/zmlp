#!/bin/sh
#
# Shamelessly copied from:
# https://github.com/elastic/elasticsearch/tree/master/distribution/src/main/resources/bin
#

# OPTIONS:
#    -d            daemonize (run in background)
#    -p pidfile    write PID to <pidfile>
#    -h
#    --help        print command line options
#    -v            print  version, then exit
#    -D prop       set JAVA system property
#    -X prop       set non-standard JAVA system property
#   --prop=val
#   --prop val     set archivist property (i.e.  -Darchivist.<prop>=<val>)

# CONTROLLING STARTUP:
#
# This script relies on few environment variables to determine startup
# behavior, those variables are:
#
#   JAVA_OPTS    -- Additional arguments to the JVM for heap size, etc
#   ARCHIVIST_JAVA_OPTS -- External Java Opts on top of the defaults set
#
#
# Optionally, exact memory values can be set using the following values, note,
# they can still be set using the `ARCHIVIST_JAVA_OPTS`. Sample format include "512m", and "10g".
#
#   ARCHIVIST_HEAP_SIZE -- Sets both the minimum and maximum memory to allocate (recommended)
#
# As a convenience, a fragment of shell is sourced in order to set one or
# more of these variables. This so-called `include' can be placed in a
# number of locations and will be searched for in order. The lowest
# priority search path is the same directory as the startup script, and
# since this is the location of the sample in the project tree, it should
# almost work Out Of The Box.
#
# Any serious use-case though will likely require customization of the
# include. For production installations, it is recommended that you copy
# the sample to one of /usr/share/archivist/archivist.in.sh,
# /usr/local/share/archivist/archivist.in.sh, or
# /opt/archivist/archivist.in.sh and make your modifications there.
#
# Another option is to specify the full path to the include file in the
# environment. For example:
#
#   $ ARCHIVIST_INCLUDE=/path/to/in.sh archivist -p /var/run/es.pid
#
# Note: This is particularly handy for running multiple instances on a
# single installation, or for quick tests.
#
# If you would rather configure startup entirely from the environment, you
# can disable the include by exporting an empty ARCHIVIST_INCLUDE, or by
# ensuring that no include files exist in the aforementioned search list.
# Be aware that you will be entirely responsible for populating the needed
# environment variables.

CDPATH=""
SCRIPT="$0"

# SCRIPT may be an arbitrarily deep series of symlinks. Loop until we have the concrete path.
while [ -h "$SCRIPT" ] ; do
  ls=`ls -ld "$SCRIPT"`
  # Drop everything prior to ->
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    SCRIPT="$link"
  else
    SCRIPT=`dirname "$SCRIPT"`/"$link"
  fi
done

# determine archivist home
ARCHIVIST_HOME=`dirname "$SCRIPT"`/..

# make archivist_HOME absolute
ARCHIVIST_HOME=`cd "$ARCHIVIST_HOME"; pwd`


# If an include wasn't specified in the environment, then search for one...
if [ "x$ARCHIVIST_INCLUDE" = "x" ]; then
    # Locations (in order) to use when searching for an include file.
    for include in /usr/share/archivist/archivist.in.sh \
                   /usr/local/share/archivist/archivist.in.sh \
                   /opt/archivist/archivist.in.sh \
                   ~/.archivist.in.sh \
                   $ARCHIVIST_HOME/bin/archivist.in.sh \
                   "`dirname "$0"`"/archivist.in.sh; do
        if [ -r "$include" ]; then
            . "$include"
            break
        fi
    done
# ...otherwise, source the specified include.
elif [ -r "$ARCHIVIST_INCLUDE" ]; then
    . "$ARCHIVIST_INCLUDE"
fi

if [ -x "$JAVA_HOME/bin/java" ]; then
    JAVA="$JAVA_HOME/bin/java"
else
    JAVA=`which java`
fi

if [ ! -x "$JAVA" ]; then
    echo "Could not find any executable java binary. Please install java in your PATH or set JAVA_HOME"
    exit 1
fi

# Special-case path variables.
case `uname` in
    CYGWIN*)
        ARCHIVIST_HOME=`cygpath -p -w "$ARCHIVIST_HOME"`
    ;;
esac

usage=`echo $* | egrep -- '(^-h |-h$| -h |--help$|--help )'`
if [ "x$usage" != "x" ]; then
    echo "Usage: $0 [-dh] [--pidfile pidfile] [--prop=value]"
    echo "Start archivist."
    echo "    -d                    daemonize (run in background)"
    echo "    --pidfile=path        write PID file to <path>"
    echo "    -h"
    echo "    --help                print command line options"
    echo "   --prop=val             set archivist configurtion property"
    echo
    exit 0;
fi

daemonized=`echo $* | egrep -- '(^-d |-d$| -d |--daemonize$|--daemonize )'`
archivist_parms="-Darchivist"

if [ "x$daemonized" = "x" ]; then
    archivist_parms="$archivist_parms -Darchivist.foreground=yes"
    exec "$JAVA" -jar $JAVA_OPTS $ARCHIVIST_JAVA_OPTS $archivist_parms \
            -Darchivist.path.home="$ARCHIVIST_HOME" \
            -Des.config="$ARCHIVIST_HOME"/config/elasticsearch.yml \
            -Dspring.config.location="$ARCHIVIST_HOME"/config/ \
            "$ARCHIVIST_HOME"/lib/archivist.jar "$@"
else
    exec "$JAVA" -jar $JAVA_OPTS $ARCHIVIST_JAVA_OPTS $archivist_parms \
        -Darchivist.path.home="$ARCHIVIST_HOME" \
        -Des.config="$ARCHIVIST_HOME"/config/elasticsearch.yml \
        -Dspring.config.location="$ARCHIVIST_HOME"/config/ \
        -Dlogging.config="$ARCHIVIST_HOME"/config/logback.xml \
        "$ARCHIVIST_HOME"/lib/archivist.jar "$@" <&- &

    retval=$?
    pid=$!
    [ $retval -eq 0 ] || exit $retval
    if ! ps -p $pid > /dev/null ; then
      exit 1
    fi
    exit 0
fi

exit $?
