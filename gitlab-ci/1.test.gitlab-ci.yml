## Wallet Integration CI Tests
wallet-integration-test-suite:
  stage: test
  image: cypress/browsers:node14.7.0-chrome84
  before_script:
    - cd applications/wallet/cypress
    - npm ci
  script:
    - npm run cli -- --browser chrome --headless --record --spec 'integration/**/*'
  artifacts:
    when: always
    paths:
      - applications/wallet/cypress/videos/**/*.mp4
      - applications/wallet/cypress/screenshots/**/*.png
    expire_in: 1 day
  rules:
    # Scheduled Pipelines
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: always
    # MR to Development with Cypress changes
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "development"
      changes:
        - "applications/wallet/cypress/**/*"

## Wallet Frontend CI Tests
wallet-frontend-test-suite:
  stage: test
  image: node:16
  before_script:
    - cd applications/wallet/frontend
    - npm ci
  script:
    - npm run lint
    - npm run test:cover
    - npm run build
  rules:
    # Scheduled Pipelines
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    # MR to any branch that is not master with Frontend changes
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"
      changes:
        - "applications/wallet/frontend/**/*"
    # MR to QA with any change
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "qa"
    # Merged to Development with Frontend changes
    - if: $CI_COMMIT_BRANCH == "development"
      changes:
        - "applications/wallet/frontend/**/*"

## Wallet Backend CI Tests
wallet-backend-test-suite:
  stage: test
  image: mc706/pipenv-3.7
  services:
    - name: postgres:9.6.22
      alias: postgres
  variables:
    POSTGRES_PASSWORD: a8fnnbe934j
    POSTGRES_USER: wallet
    POSTGRES_DB: wallet
    PG_HOST: postgres
  script:
    - cd applications/wallet
    - pipenv sync
    - cd app
    - pipenv run flake8
    - pipenv run pytest --cov=.
  rules:
    # Scheduled Pipelines
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    # MR to any branch that is not master with Backend changes
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"
      changes:
        - "applications/wallet/app/**/*"
        - "applications/wallet/Pipfile*"
    # MR to QA with any change
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "qa"
    # Merged to Development with Backend changes
    - if: $CI_COMMIT_BRANCH == "development"
      changes:
        - "applications/wallet/app/**/*"

## Metrics Backend Tests
metrics-backend-test-suite:
  stage: test
  image: mc706/pipenv-3.7
  services:
      - name: postgres:9.6.22
        alias: postgres
  variables:
    DJANGO_SETTINGS_MODULE: metrics.settings.testing
    DEBUG: "true"
    PG_DB_HOST: postgres
    PG_DB_USER: metrics
    PG_DB_PASSWORD: 2mAPDWhuiYdIW69u
    POSTGRES_DB: metrics
    POSTGRES_USER: metrics
    POSTGRES_PASSWORD: 2mAPDWhuiYdIW69u

  script:
    - cd services/metrics
    - pipenv sync
    - cd app
    - pipenv run flake8
    - pipenv run pytest --cov=.
  rules:
    # Scheduled Pipelines
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    # MR to any branch that is not master with Backend changes
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"
      changes:
        - "services/metrics/app/**/*"
        - "services/metrics/Pipfile*"
    # MR to QA with any change
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "qa"
    # Merged to Development with Backend changes
    - if: $CI_COMMIT_BRANCH == "development"
      changes:
        - "services/metrics/**/*"

## Backend Python Lint
backend-py-lint:
  image: python:3.7.5
  stage: pretest
  allow_failure: false
  script:
    - python -m pip install flake8
    - flake8 --config .flake8.cfg client/boonczar client/boonsdk client/boonlab containers/boonflow containers/py3-base containers/boondocks containers/plugins-core containers/plugins-analysis containers/plugins-train services/analyst services/mlbbq services/swivel services/tugboat deployment/datasets
  rules:
    # Scheduled Pipelines
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    # MR to any branch that is not master with Boon AI Python changes
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"
      changes:
        - "client/boonsdk/**/*.py"
        - "client/boonlab/**/*.py"
        - "client/boonczar/**/*.py"
        - "containers/**/*.py"
        - "services/analyst/**/*.py"
        - "services/mlbbq/**/*.py"
        - "services/swivel/*.py"
        - "deployment/datasets/**/*.py"
        - "services/tugboat/*.py"
    # MR to QA with any change
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "qa"

## Backend Kotlin Lint
backend-kotlin-lint:
  image: kkopper/ktlint:0.41.0
  stage: pretest
  script:
    - ktlint services/**/*.kt lib/**/*.kt
  rules:
    # Scheduled Pipelines
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    # MR to any branch that is not master with Boon AI Kotlin changes
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"
      changes:
        - "services/**/*.kt"
        - "lib/**/*.kt"
    # MR to QA with any change
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "qa"

# SDK Test
# Testing other containers requires building containers
# Testing analyst requires it can pull plugin containers.
sdk-unit-tests:
  image: python:3.8.5
  stage: test
  allow_failure: false
  script:
    - apt-get update
    - apt-get -y install openimageio-tools mediainfo
    - python -m pip install pipenv pytest cmake
    - pip install --upgrade pip
    - cd client/boonsdk
    - pip install .
    - pytest
    - cd ../../containers/boonflow
    - tar -xJf ffmpeg-amd64-static.tar.xz
    - cp ffmpeg-4.2.2-amd64-static/ffmpeg /usr/bin
    - cp ffmpeg-4.2.2-amd64-static/ffprobe /usr/bin
    - pip install .
    - pytest
    - cd ../boondocks
    - pip install .
    - pytest
    - cd ../../services/swivel
    - pip install -r requirements.txt
    - pytest tests.py
    - cd ../tugboat
    - pip install -r requirements.txt
    - pytest tests.py
  rules:
    # Scheduled Pipelines
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    # MR to any branch that is not master with BOONAI changes
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"
      changes:
        - "client/boonsdk/**/*"
        - "client/boonlab/**/*"
        - "client/boonczar/**/*"
        - "containers/boonflow/**/*"
        - "containers/boondocks/**/*"
        - "services/swivel/**/*"
        - "services/tugboat/**/*"
    # MR to QA with any change
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "qa"

plugin-container-tests:
  image: boonai/docker-buildx
  stage: test
  services:
    - docker:19-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://localhost:2375
  retry: 2
  before_script:
    - apk add docker-compose
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASS"
  script:
    - ./buildx --plugins
    - docker run -v ${PWD}/test-data:/test-data boonai/plugins-core:latest pytest -s /boonai/pylib
    - docker run -v ${PWD}/test-data:/test-data boonai/plugins-analysis:latest pytest -s /boonai/pylib
    - docker run -v ${PWD}/test-data:/test-data boonai/plugins-train:latest pytest -s /boonai/pylib
  rules:
    # Scheduled Pipelines
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    # MR to any branch that is not master with Boon AI changes
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"
      changes:
        - "client/boonsdk/**/*"
        - "containers/**/*"
    # MR to QA with any change
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "qa"

# Kotlin services - Unit tests - Step 1
boonai-services-build-artifacts:
  image: boonai/jvm-build:latest
  stage: build
  variables:
    MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  script:
    - cd services/elasticsearch
    - mvn clean install -Dmaven.test.skip=true
  artifacts:
    paths:
      - services/elasticsearch/es-similarity/target/releases/es-similarity.zip
  rules:
    # Scheduled Pipelines
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    # MR to any branch that is not master with Boon AI changes
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"
      changes:
        - "services/analyst/**/*"
        - "services/api-gateway/**/*"
        - "services/archivist/**/*"
        - "services/auth-server/**/*"
        - "services/elasticsearch/**/*"
        - "services/mlbbq/**/*"
        - "services/officer/**/*"
        - "services/reporter/**/*"
        - "services/jvm-common/**/*"
        - "services/swivel/**/*"
        - "services/tugboat/**/*"
    # MR to QA with any change
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "qa"

# Kotlin services - Unit tests - Step 2
elasticsearch-push-to-local-registry:
  image: docker:18.09.8-dind
  stage: pretest
  retry: 2
  services:
    - docker:18.09.8-dind
  script:
    - cd services/elasticsearch
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t $LOCAL_ES_NAME .
    - docker push $LOCAL_ES_NAME
  rules:
    # Scheduled Pipelines
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    # MR to any branch that is not master with Boon AI changes
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"
      changes:
        - "services/analyst/**/*"
        - "services/api-gateway/**/*"
        - "services/archivist/**/*"
        - "services/auth-server/**/*"
        - "services/elasticsearch/**/*"
        - "services/mlbbq/**/*"
        - "services/officer/**/*"
        - "services/reporter/**/*"
        - "services/swivel/**/*"
        - "services/tugboat/**/*"
    # MR to QA with any change
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "qa"

boonai-services-unit-tests:
  stage: test
  image: boonai/jvm-build:latest
  retry: 1
  services:
    - name: redis:alpine
      alias: redis
    - name: minio/minio
      alias: minio
      command: ["server", "/data"]
    - name: postgres:9.6.9
      alias: postgres
    - name: $LOCAL_ES_NAME
      alias: elasticsearch
      command: ["bin/elasticsearch", "-Ediscovery.type=single-node"]
  variables:
    POSTGRES_PASSWORD: "zorroa"
    POSTGRES_USER: "zorroa"
    POSTGRES_DB: "zorroa"
    PGDATA: "/var/lib/postgresql/data/pgdata"
    ARCHIVIST_ES_URL: "http://localhost:9200"
    SPRING_DATASOURCE_URL: "jdbc:postgresql://localhost:5432/zorroa?currentSchema=archivist_test"
    LOGGING_LEVEL_COM_ZORROA: "WARN"
    USER: "gitlab"
    BOONAI_STORAGE_PROJECT_ACCESSKEY: "qwerty123"
    BOONAI_STORAGE_PROJECT_SECRETKEY: "123qwerty"
    BOONAI_STORAGE_PROJECT_URL: "http://localhost:9000"
    BOONAI_STORAGE_SYSTEM_ACCESSKEY: "qwerty123"
    BOONAI_STORAGE_SYSTEM_SECRETKEY: "123qwerty"
    BOONAI_STORAGE_SYSTEM_URL: "http://localhost:9000"
    BOONAI_STORAGE_CLIENT: "minio"
    MINIO_ACCESS_KEY: "qwerty123"
    MINIO_SECRET_KEY: "123qwerty"
    MXNET_OS: "linux"
    MINIO_URL: "http://localhost:9000"
    MINIO_DEFAULT_PROTOCOL: "http"
    ARCHIVIST_ES_BACKUP_BUCKET_NAME: "project-storage-test"
    REDIS_HOST: "localhost:6379"
    MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
    MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  script:
    - export
    - IP="$(cat /etc/hosts |grep $HOSTNAME|cut -d$'\t' -f1)"
    - ARCHIVIST_ES_URL="http://${IP}:9200"
    - BOONAI_STORAGE_PROJECT_URL="http://${IP}:9000"
    - BOONAI_STORAGE_SYSTEM_URL="http://${IP}:9000"
    - mvn clean install -f services/jvm-common -q -Dmaven.test.skip=true -Dmaven.wagon.http.pool=false
    - mvn test verify -f services/jvm-common -q -Dmaven.wagon.http.pool=false
    - mvn clean install -f services/officer -q -Dmaven.test.skip=true -Dmaven.wagon.http.pool=false
    - mvn test verify -f services/officer -q -Dmaven.wagon.http.pool=false
    - mvn clean install -f services/archivist -q -Dmaven.test.skip=true -Dmaven.wagon.http.pool=false
    - mvn test verify -f services/archivist -q -Dmaven.wagon.http.pool=false
    - SPRING_DATASOURCE_URL="jdbc:postgresql://localhost:5432/zorroa?currentSchema=auth_test"
    - mvn clean install -f services/auth-server -q -Dmaven.test.skip=true -Dmaven.wagon.http.pool=false
    - mvn test verify -f services/auth-server -q -Dmaven.wagon.http.pool=false
  rules:
    # Scheduled Pipelines
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    # MR to any branch that is not master with Boon AI changes
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"
      changes:
        - "services/analyst/**/*"
        - "services/api-gateway/**/*"
        - "services/archivist/**/*"
        - "services/auth-server/**/*"
        - "services/elasticsearch/**/*"
        - "services/mlbbq/**/*"
        - "services/officer/**/*"
        - "services/jvm-common/**/*"
    # MR to QA with any change
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "qa"
