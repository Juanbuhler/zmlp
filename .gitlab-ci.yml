image: docker:18.09.8-dind # A Docker 19 based image does not work on Gitlab shared runners (November 2019)
services:
  - docker:18.09.8-dind
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375
  LOCAL_ES_NAME: $CI_REGISTRY_IMAGE/elasticsearch:$CI_COMMIT_SHORT_SHA

stages:
  - test
  - push

# Wallet Jobs
.wallet-base:
  only:
    - merge_requests
    - development
    - qa
    - master

.wallet-frontend-base:
  extends: .wallet-base
  image: node:12
  before_script:
    - cd applications/wallet/app/frontend
    - npm ci

wallet-frontend-test-suite:
  extends: .wallet-frontend-base
  stage: test
  script:
    - npm run lint
    - npm run test:cover
    - npm run size

wallet-backend-test-suite:
  extends: .wallet-base
  image: mc706/pipenv-3.6
  stage: test
  services:
    - name: postgres:9.6.9
      alias: postgres
  variables:
    POSTGRES_PASSWORD: a8fnnbe934j
    POSTGRES_USER: wallet
    POSTGRES_DB: wallet
    PG_HOST: postgres
  script:
    - cd applications/wallet
    - pipenv sync
    - cd app
    - pipenv run flake8
    - pipenv run pytest --cov=.

# SDK Test
sdk-unit-tests:
  image: python:3.8
  stage: test
  allow_failure: true
  only:
    - merge_requests
    - development
    - qa
    - master
  script:
    - python -m pip install flake8 pipenv pytest
    - cd containers/zmlp-plugins-analysis
    - flake8
    - pipenv install -r requirements.txt
    - pytest
    - cd ../../containers/zmlp-plugins-base
    - flake8
    - pipenv install -r requirements.txt
    - pytest
    - cd ../../containers/zmlp-plugins-core
    - flake8
    - pipenv install -r requirements.txt
    - pytest

docker_hub_push:
  image: docker:18.09.8-dind
  stage: push
  services:
    - docker:18.09.8-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HUB_IMAGE: zorroaevi/analyst:$CI_COMMIT_REF_SLUG
    DOCKER_HOST: tcp://localhost:2375
  retry: 2
  only:
    - development
  script:
    - apk add docker-compose
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASS"
    - docker-compose build
    - docker tag zmlp/authserver:latest zmlp/authserver:development; docker push zmlp/authserver:development
    - docker tag zmlp/apigateway:latest zmlp/apigateway:development; docker push zmlp/apigateway:development
    - docker tag zmlp/analyst:latest zmlp/analyst:development; docker push zmlp/analyst:development
    - docker tag zmlp/archivist:latest zmlp/archivist:development; docker push zmlp/archivist:development
    - docker tag zmlp/wallet:latest zmlp/wallet:development; docker push zmlp/wallet:development
    - docker tag zmlp/elasticsearch:latest zmlp/elasticsearch:development; docker push zmlp/elasticsearch:development
## Kotlin services - Unit tests - Step 1
#services_build_artifacts:
#  image: maven:3.6.2-jdk-11-slim
#  stage: build
#  only:
#    - merge_requests
#    - development
#  script:
#    - cd services/elasticsearch/es-similarity
#    - mvn package
#    - cd ../
#    - cd es-kwconf
#    - mvn package
#    - cd ../
#    - mvn clean install -Dmaven.test.skip=true
#    # - mvn project-info-reports:dependencies # not sure if this is still required
#  artifacts:
#    paths:
#      - services/elasticsearch/es-kwconf/target/releases/es-kwconf.zip
#      - services/elasticsearch/es-similarity/target/releases/es-similarity.zip
#
## Kotlin services - Unit tests - Step 2
#services_push_to_local_registry:
#  stage: pretest
#  only:
#    - merge_requests
#    - development
#  retry: 2
#  script:
#    - cd services/elasticsearch
#    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
#    - docker build -t $LOCAL_ES_NAME .
#    - docker push $LOCAL_ES_NAME
#
# Kotlin services - Unit tests - Step 3
#services_unit_tests:
#  stage: test
#  image: maven:3.6.1-jdk-11-slim
#  only:
#    - merge_requests
#    - development
#  services:
#    - name: redis:alpine
#      alias: redis
#    - name: postgres:9.6.9
#      alias: postgres
#    - name: $LOCAL_ES_NAME
#      alias: elasticsearch
#      command: [ "bin/elasticsearch", "-Ediscovery.type=single-node"]
#  variables:
#    POSTGRES_PASSWORD: zorroa
#    POSTGRES_USER: zorroa
#    POSTGRES_DB: zorroa
#    PGDATA: /var/lib/postgresql/data/pgdata
#
#    # This environment variable defined here does *NOT* override the value in services test.properties file when run
#    # in this Gitlab services job. It should work if this step is converted to docker-compose and the variable is
#    # conditionally defined in test.properties.
#    SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/zorroa?currentSchema=archivist_test"
#
#    LOGGING_LEVEL_COM_ZORROA: WARN
#    USER: gitlab
#  script:
#    - mvn test verify -f services/archivist -q
#    - mvn test verify -f services/auth-server -q
#    - mvn test verify -f services/officer -q
#
# Kotlin Services Jobs
#kotlin-lint:
#  image: java:latest
#  stage: test
#  script:
#    - apk update && apk add ca-certificates wget && update-ca-certificates
#    - wget https://github.com/shyiko/ktlint/releases/download/0.31.0/ktlint
#    - chmod a+x ktlint
#    - ./ktlint services/archivist/src/**/*.kt
#    - ./ktlint services/auth-server/src/**/*.kt
#    - ./ktlint services/elasticsearch/es-kwconf/src/main/kotlin/**/*.kt
#    - ./ktlint services/officer/src/**/*.kt
#
# SDK Jobs
#python-lint:
#  image: python:3.8
#  only:
#    - /^sdk\/.*$/i
#  stage: test
#  script:
#    - python -m pip install flake8
#    - flake8 containers/plugins-py3-analysis
#    - flake8 containers/plugins-py3-core
#    - flake8 sdk/python
#
#sdk-containers-tests:
#  stage: test
#  before_script:
#    - apk add --no-cache python3 # for build-images.py
#    - pip3 install wheel
#    - ./build-images.py
#  script:
#    - docker run -v $PWD/test-data:/test-data --entrypoint pytest zmlp-plugins-analysis /zps/pylib/zplugins
#    - docker run -v $PWD/test-data:/test-data --entrypoint pytest zmlp-plugins-core /zps/pylib/zplugins

