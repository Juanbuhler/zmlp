image: docker:18.09.8-dind # A Docker 19 based image does not work on Gitlab shared runners (November 2019)
services:
  - docker:18.09.8-dind
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375
  LOCAL_ES_NAME: $CI_REGISTRY_IMAGE/elasticsearch:$CI_COMMIT_SHORT_SHA

stages:
  - build
  - pretest
  - test
  - push
  - deploy

.master-branch-any-change:
  only:
    refs:
      - master
    changes:
      - "**/*"


########  Wallet  ########

## Wallet Frontend CI Tests
wallet-frontend-test-suite:
  stage: test
  image: node:12
  before_script:
    - cd applications/wallet/frontend
    - npm ci
  script:
    - npm run lint
    - npm run test:cover
    - npm run size
  only:
    refs:
      - merge_requests
      - development
    changes:
      - applications/wallet/frontend/**/*
      - .gitlab-ci.yml

## Wallet Frontend CI Tests for any change to Master
wallet-frontend-test-suite-master-branch-any-change:
  extends:
    - wallet-frontend-test-suite
    - .master-branch-any-change


## Wallet Backend CI Tests
wallet-backend-test-suite:
  stage: test
  image: mc706/pipenv-3.7
  services:
    - name: postgres:9.6.9
      alias: postgres
  variables:
    POSTGRES_PASSWORD: a8fnnbe934j
    POSTGRES_USER: wallet
    POSTGRES_DB: wallet
    PG_HOST: postgres
  script:
    - cd applications/wallet
    - pipenv sync
    - cd app
    - pipenv run flake8
    - pipenv run pytest --cov=.
  only:
    refs:
      - merge_requests
      - development
    changes:
      - applications/wallet/app/**/*
      - .gitlab-ci.yml

## Wallet Backend CI Tests for any change to Master
wallet-backend-test-suite-master-branch-any-change:
  extends:
    - wallet-backend-test-suite
    - .master-branch-any-change

## Wallet Build & Push Latest on changes to Development
wallet-dockerhub-build-push-latest:
  image: zmlp/docker-buildx
  stage: push
  services:
    - docker:19.03-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://localhost:2375
  retry: 2
  before_script:
    - apk add docker-compose
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASS"
  script:
    - ./buildx wallet
    - docker push zmlp/wallet:latest
  only:
    refs:
      - development
    changes:
      - applications/wallet/**/*

## Wallet Deploy Latest on any changes to Development
wallet-deploy-development:
  image: google/cloud-sdk
  retry: 1
  variables:
    DEPLOY_SCRIPT: ./deployment/bin/k8s-redeploy.sh
    PROJECT: zmlp-258901
  stage: deploy
  only:
    refs:
      - development
    changes:
      - applications/wallet/**/*
  before_script:
    - echo $SA_JSON > ./sa.json
    - gcloud auth activate-service-account $SA_EMAIL --key-file=./sa.json
    - gcloud container clusters get-credentials zmlp --zone us-central1-a --project ${PROJECT}
  script:
    - ${DEPLOY_SCRIPT} deployment ${PROJECT} wallet


########  ZMLP Services & Plugins  ########

## Backend Python Lint
backend-py-lint:
  image: python:3.7.5
  stage: pretest
  allow_failure: false
  script:
    - python -m pip install flake8
    - flake8 --config .flake8.cfg sdk client/python containers/zmlp-py3-base services/analyst containers/zmlp-plugins-base containers/zmlp-plugins-core containers/zmlp-plugins-analysis containers/zmlp-plugins-train
  only:
    refs:
      - merge_requests
    changes:
      - client/python/**/*.py
      - sdk/**/.py
      - containers/**/*.py
      - services/analyst/**/*.py
      - .gitlab-ci.yml

backend-py-lint-master-branch-any-change:
  extends:
    - backend-py-lint
    - .master-branch-any-change

## Backend Kotlin Lint
backend-kotlin-lint:
  image: kkopper/ktlint
  stage: pretest
  script:
    - ktlint services/**/*.kt lib/**/*.kt
  only:
    refs:
      - merge_requests
    changes:
      - services/**/*.kt
      - lib/**/*.kt
      - .gitlab-ci.yml

backend-kotlin-lint-master-branch-any-change:
  extends:
    - backend-kotlin-lint
    - .master-branch-any-change

# SDK Test
# Testing other containers requires building containers
# Testing analyst requires it can pull plugin containers.
sdk-unit-tests:
  image: python:3.7.5
  stage: test
  allow_failure: true
  script:
    - python -m pip install pipenv pytest
    - cd client/python
    - python setup.py install
    - pytest
    - cd ../../sdk
    - tar -xJf ffmpeg-4.2.1-amd64-static.tar.xz
    - cp ffmpeg-4.2.1-amd64-static/ffmpeg /usr/bin
    - cp ffmpeg-4.2.1-amd64-static/ffprobe /usr/bin
    - python setup.py install
    - pytest
    - cd ../containers/zmlp-plugins-base
    - pip install -r requirements.txt
    - pytest
  only:
    refs:
      - merge_requests
    changes:
      - client/python/**/*
      - sdk/**/*
      - containers/zmlp-plugins-base/**/*
      - .gitlab-ci.yml

plugin-container-tests:
  image: zmlp/docker-buildx
  stage: test
  services:
    - docker:19.03-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://localhost:2375
  retry: 2
  before_script:
    - apk add docker-compose
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASS"
  script:
    - ./buildx --plugins
    - docker run -v ${PWD}/test-data:/test-data zmlp/plugins-core:latest pytest -s /zvi/pylib
    - docker run -v ${PWD}/test-data:/test-data zmlp/plugins-analysis:latest pytest -s /zvi/pylib
    - docker run -v ${PWD}/test-data:/test-data zmlp/plugins-train:latest pytest -s /zvi/pylib
  only:
    refs:
      - merge_requests
    changes:
      - client/python/**/*
      - sdk/**/*
      - containers/**/*
      - .gitlab-ci.yml

sdk-java-unit-tests:
  image: maven:3.6-jdk-11
  stage: test
  allow_failure: true
  script:
    - mvn test verify -f client/java -q
  only:
    refs:
      - merge_requests
    changes:
      - client/java/**/*
      - containers/zmlp-plugins-base/**/*
      - .gitlab-ci.yml

sdk-unit-tests-master-branch-any-change:
  retry: 1
  extends:
    - sdk-unit-tests
    - sdk-java-unit-tests
    - .master-branch-any-change

zmlp-dockerhub-build-push-latest:
  image: zmlp/docker-buildx
  stage: push
  services:
    - docker:19.03-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://localhost:2375
  retry: 2
  before_script:
    - apk add docker-compose
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASS"
  script:
    - ./buildx
    - docker push zmlp/archivist:latest
    - docker push zmlp/officer:latest
    - docker push zmlp/elasticsearch:latest
    - docker push zmlp/authserver:latest
    - docker push zmlp/apigateway:latest
    - docker push zmlp/py3-base:latest
    - docker push zmlp/py3-client:latest
    - docker push zmlp/py3-sdk:latest
    - docker push zmlp/plugins-base:latest
    - docker push zmlp/plugins-models:latest
    - docker push zmlp/plugins-core:latest
    - docker push zmlp/plugins-analysis:latest
    - docker push zmlp/analyst:latest
    - docker push zmlp/jvm-common:latest
    - docker push zmlp/ml-bbq:latest
    - docker push zmlp/plugins-train:latest
  only:
    refs:
      - development
    changes:
      - client/**/*
      - containers/**/*
      - dev/**/*
      - lib/**/*
      - sdk/**/*
      - services/**/*

zmlp-deploy-development:
  image: google/cloud-sdk
  retry: 1
  variables:
    DEPLOY_SCRIPT: ./deployment/bin/k8s-redeploy.sh
    PROJECT: zmlp-258901
  stage: deploy
  only:
    refs:
      - development
    changes:
      - client/**/*
      - containers/**/*
      - dev/**/*
      - lib/**/*
      - sdk/**/*
      - services/**/*
  before_script:
    - echo $SA_JSON > ./sa.json
    - gcloud auth activate-service-account $SA_EMAIL --key-file=./sa.json
    - gcloud container clusters get-credentials zmlp --zone us-central1-a --project ${PROJECT}
  script:
    - ${DEPLOY_SCRIPT} deployment ${PROJECT} analyst
    - ${DEPLOY_SCRIPT} deployment ${PROJECT} api-gateway
    - ${DEPLOY_SCRIPT} deployment ${PROJECT} archivist
    - ${DEPLOY_SCRIPT} deployment ${PROJECT} auth-server
    - ${DEPLOY_SCRIPT} statefulset ${PROJECT} elasticsearch-master
    - ${DEPLOY_SCRIPT} statefulset ${PROJECT} elasticsearch-data
    - ${DEPLOY_SCRIPT} deployment ${PROJECT} officer
    - ${DEPLOY_SCRIPT} deployment ${PROJECT} ml-bbq

# Kotlin services - Unit tests - Step 1
zmlp-services-build-artifacts:
  image: maven:3.6.2-jdk-11-slim
  stage: build
  script:
    - cd services/elasticsearch
    - mvn clean install -Dmaven.test.skip=true
  artifacts:
    paths:
      - services/elasticsearch/es-similarity/target/releases/es-similarity.zip
  only:
    refs:
      - merge_requests
    changes:
      - services/**/*
      - lib/**/*
      - .gitlab-ci.yml

zmlp-services-build-artifacts-master-branch-any-change:
  extends:
    - zmlp-services-build-artifacts
    - .master-branch-any-change

# Kotlin services - Unit tests - Step 2
elasticsearch-push-to-local-registry:
  image: docker:18.09.8-dind
  stage: pretest
  retry: 2
  services:
    - docker:18.09.8-dind
  script:
    - cd services/elasticsearch
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t $LOCAL_ES_NAME .
    - docker push $LOCAL_ES_NAME
  only:
    refs:
      - merge_requests
    changes:
      - services/**/*
      - .gitlab-ci.yml

elasticsearch-push-to-local-registry-master-branch-any-change:
  extends:
    - elasticsearch-push-to-local-registry
    - .master-branch-any-change

zmlp-services-unit-tests:
  stage: test
  image: maven:3.6-jdk-11
  retry: 1
  services:
    - name: redis:alpine
      alias: redis
    - name: minio/minio
      alias: minio
      command: ["server", "/data"]
    - name: postgres:9.6.9
      alias: postgres
    - name: $LOCAL_ES_NAME
      alias: elasticsearch
      command: ["bin/elasticsearch", "-Ediscovery.type=single-node"]
    - name: rabbitmq:3.8-management-alpine
      alias: rabbitmq
  variables:
    POSTGRES_PASSWORD: "zorroa"
    POSTGRES_USER: "zorroa"
    POSTGRES_DB: "zorroa"
    PGDATA: "/var/lib/postgresql/data/pgdata"
    ARCHIVIST_ES_URL: "http://localhost:9200"
    SPRING_DATASOURCE_URL: "jdbc:postgresql://localhost:5432/zorroa?currentSchema=archivist_test"
    SPRING_RABBITMQ_USERNAME: "guest"
    SPRING_RABBITMQ_PASSWORD: "guest"
    LOGGING_LEVEL_COM_ZORROA: "WARN"
    USER: "gitlab"
    ZMLP_STORAGE_PROJECT_ACCESSKEY: "qwerty123"
    ZMLP_STORAGE_PROJECT_SECRETKEY: "123qwerty"
    ZMLP_STORAGE_PROJECT_URL: "http://localhost:9000"
    ZMLP_STORAGE_PIPELINE_ACCESSKEY: "qwerty123"
    ZMLP_STORAGE_PIPELINE_SECRETKEY: "123qwerty"
    ZMLP_STORAGE_PIPELINE_URL: "http://localhost:9000"
    ZMLP_STORAGE_SYSTEM_ACCESSKEY: "qwerty123"
    ZMLP_STORAGE_SYSTEM_SECRETKEY: "123qwerty"
    ZMLP_STORAGE_SYSTEM_URL: "http://localhost:9000"
    MINIO_ACCESS_KEY: "qwerty123"
    MINIO_SECRET_KEY: "123qwerty"
    MXNET_OS: "linux"
    MINIO_URL: "http://localhost:9000"
    MINIO_DEFAULT_PROTOCOL: "http"
    ARCHIVIST_ES_BACKUP_BUCKET_NAME: "project-storage-test"
  script:
    - export
    - IP="$(cat /etc/hosts |grep $HOSTNAME|cut -d$'\t' -f1)"
    - ARCHIVIST_ES_URL="http://${IP}:9200"
    - ZMLP_STORAGE_PIPELINE_URL="http://${IP}:9000"
    - ZMLP_STORAGE_PROJECT_URL="http://${IP}:9000"
    - ZMLP_STORAGE_SYSTEM_URL="http://${IP}:9000"
    - mvn clean install -f lib/jvm-common -q -Dmaven.test.skip=true
    - mvn test verify -f lib/jvm-common -q
    - mvn clean install -f services/auth-server -q -Dmaven.test.skip=true
    - mvn test verify -f services/archivist -q
    - SPRING_DATASOURCE_URL="jdbc:postgresql://localhost:5432/zorroa?currentSchema=auth_test"
    - mvn test verify -f services/auth-server -q
    - mvn test verify -f services/officer -q
  only:
    refs:
      - merge_requests
    changes:
      - services/**/*
      - lib/**/*
      - .gitlab-cy.yml

zmlp-services-unit-tests-master-branch-any-change:
  extends:
    - zmlp-services-unit-tests
    - .master-branch-any-change


# Kotlin Services Jobs
#sdk-containers-tests:
#  stage: test
#  before_script:
#    - apk add --no-cache python3 # for build-images.py
#    - pip3 install wheel
#    - ./build-images.py
#  script:
#    - docker run -v $PWD/test-data:/test-data --entrypoint pytest zmlp-plugins-analysis /zvi/pylib/zplugins
#    - docker run -v $PWD/test-data:/test-data --entrypoint pytest zmlp-plugins-core /zvi/pylib/zplugins

