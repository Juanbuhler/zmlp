import cv2
import numpy

from models.utils import ConfusionMatrix
from zmlp import Model

mock_aggs = lambda self : {'nested#nested_labels': {'doc_count': 1744, 'filter#model_train_labels': {'doc_count': 838, 'sterms#labels': {'doc_count_error_upper_bound': 0, 'sum_other_doc_count': 0, 'buckets': [{'key': 'bird', 'doc_count': 90, 'reverse_nested#predictions_by_label': {'doc_count': 90, 'sterms#predictions': {'doc_count_error_upper_bound': 0, 'sum_other_doc_count': 0, 'buckets': [{'key': 'Unrecognized', 'doc_count': 60}, {'key': 'bird', 'doc_count': 28}, {'key': 'frog', 'doc_count': 2}]}}}, {'key': 'deer', 'doc_count': 90, 'reverse_nested#predictions_by_label': {'doc_count': 90, 'sterms#predictions': {'doc_count_error_upper_bound': 0, 'sum_other_doc_count': 0, 'buckets': [{'key': 'deer', 'doc_count': 88}, {'key': 'Unrecognized', 'doc_count': 2}]}}}, {'key': 'dog', 'doc_count': 90, 'reverse_nested#predictions_by_label': {'doc_count': 90, 'sterms#predictions': {'doc_count_error_upper_bound': 0, 'sum_other_doc_count': 0, 'buckets': [{'key': 'dog', 'doc_count': 64}, {'key': 'Unrecognized', 'doc_count': 20}, {'key': 'cat', 'doc_count': 3}, {'key': 'horse', 'doc_count': 2}, {'key': 'deer', 'doc_count': 1}]}}}, {'key': 'frog', 'doc_count': 87, 'reverse_nested#predictions_by_label': {'doc_count': 87, 'sterms#predictions': {'doc_count_error_upper_bound': 0, 'sum_other_doc_count': 0, 'buckets': [{'key': 'frog', 'doc_count': 83}, {'key': 'Unrecognized', 'doc_count': 4}]}}}, {'key': 'cat', 'doc_count': 86, 'reverse_nested#predictions_by_label': {'doc_count': 86, 'sterms#predictions': {'doc_count_error_upper_bound': 0, 'sum_other_doc_count': 0, 'buckets': [{'key': 'cat', 'doc_count': 83}, {'key': 'Unrecognized', 'doc_count': 3}]}}}, {'key': 'ship', 'doc_count': 84, 'reverse_nested#predictions_by_label': {'doc_count': 84, 'sterms#predictions': {'doc_count_error_upper_bound': 0, 'sum_other_doc_count': 0, 'buckets': [{'key': 'ship', 'doc_count': 70}, {'key': 'Unrecognized', 'doc_count': 14}]}}}, {'key': 'horse', 'doc_count': 82, 'reverse_nested#predictions_by_label': {'doc_count': 82, 'sterms#predictions': {'doc_count_error_upper_bound': 0, 'sum_other_doc_count': 0, 'buckets': [{'key': 'horse', 'doc_count': 75}, {'key': 'Unrecognized', 'doc_count': 7}]}}}, {'key': 'truck', 'doc_count': 82, 'reverse_nested#predictions_by_label': {'doc_count': 82, 'sterms#predictions': {'doc_count_error_upper_bound': 0, 'sum_other_doc_count': 0, 'buckets': [{'key': 'truck', 'doc_count': 63}, {'key': 'Unrecognized', 'doc_count': 19}]}}}, {'key': 'airplane', 'doc_count': 75, 'reverse_nested#predictions_by_label': {'doc_count': 75, 'sterms#predictions': {'doc_count_error_upper_bound': 0, 'sum_other_doc_count': 0, 'buckets': [{'key': 'airplane', 'doc_count': 61}, {'key': 'Unrecognized', 'doc_count': 14}]}}}, {'key': 'automobile', 'doc_count': 72, 'reverse_nested#predictions_by_label': {'doc_count': 72, 'sterms#predictions': {'doc_count_error_upper_bound': 0, 'sum_other_doc_count': 0, 'buckets': [{'key': 'Unrecognized', 'doc_count': 38}, {'key': 'truck', 'doc_count': 24}, {'key': 'automobile', 'doc_count': 9}, {'key': 'frog', 'doc_count': 1}]}}}]}}}}  # noqa


def test_get_confusion_matrix(monkeypatch):
    monkeypatch.setattr(ConfusionMatrix, '_ConfusionMatrix__get_confusion_matrix_aggregations',
                        mock_aggs)
    matrix = ConfusionMatrix(Model({'name': 'test'}), None)
    assert matrix.labels == ['Unrecognized', 'airplane', 'automobile', 'bird', 'cat',
                             'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
    assert matrix.accuracy == 0.7446300715990454
    assert matrix.test_set_only
    assert matrix.min_score == 0.0
    assert matrix.max_score == 1.0
    assert matrix.to_dict() == {'labels': ['Unrecognized',
                                           'airplane',
                                           'automobile',
                                           'bird',
                                           'cat',
                                           'deer',
                                           'dog',
                                           'frog',
                                           'horse',
                                           'ship',
                                           'truck'],
                                'matrix': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                           [14, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                           [38, 0, 9, 0, 0, 0, 0, 1, 0, 0, 24],
                                           [60, 0, 0, 28, 0, 0, 0, 2, 0, 0, 0],
                                           [3, 0, 0, 0, 83, 0, 0, 0, 0, 0, 0],
                                           [2, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0],
                                           [20, 0, 0, 0, 3, 1, 64, 0, 2, 0, 0],
                                           [4, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0],
                                           [7, 0, 0, 0, 0, 0, 0, 0, 75, 0, 0],
                                           [14, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0],
                                           [19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63]],
                                'maxScore': 1.0,
                                'minScore': 0.0,
                                'name': 'test',
                                'overallAccuracy': 0.7446300715990454,
                                'testSetOnly': True}
    assert matrix.to_dict(normalize_matrix=True) == {'labels': ['Unrecognized',
                                                                'airplane',
                                                                'automobile',
                                                                'bird',
                                                                'cat',
                                                                'deer',
                                                                'dog',
                                                                'frog',
                                                                'horse',
                                                                'ship',
                                                                'truck'],
                                                     'matrix': [
                                                         [0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                          0.0, 0.0, 0.0, 0.0, 0.0],
                                                         [0.18666666666666668,
                                                          0.8133333333333334, 0.0, 0.0,
                                                          0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                          0.0],
                                                         [0.5277777777777778,
                                                          0.0,
                                                          0.125,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.013888888888888888,
                                                          0.0,
                                                          0.0,
                                                          0.3333333333333333],
                                                         [0.6666666666666666,
                                                          0.0,
                                                          0.0,
                                                          0.3111111111111111,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.022222222222222223,
                                                          0.0,
                                                          0.0,
                                                          0.0],
                                                         [0.03488372093023256,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.9651162790697675,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0],
                                                         [0.022222222222222223,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.9777777777777777,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0],
                                                         [0.2222222222222222,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.03333333333333333,
                                                          0.011111111111111112,
                                                          0.7111111111111111,
                                                          0.0,
                                                          0.022222222222222223,
                                                          0.0,
                                                          0.0],
                                                         [0.04597701149425287,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.9540229885057471,
                                                          0.0,
                                                          0.0,
                                                          0.0],
                                                         [0.08536585365853659,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.9146341463414634,
                                                          0.0,
                                                          0.0],
                                                         [0.16666666666666666,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.8333333333333334,
                                                          0.0],
                                                         [0.23170731707317074,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.0,
                                                          0.7682926829268293]],
                                                     'maxScore': 1.0,
                                                     'minScore': 0.0,
                                                     'name': 'test',
                                                     'overallAccuracy': 0.7446300715990454,
                                                     'testSetOnly': True}
    thumbnail = ConfusionMatrix(Model({'name': 'test'}), None).create_thumbnail_image()
    npimg = numpy.fromstring(thumbnail.read(), numpy.uint8)
    image = cv2.imdecode(npimg, cv2.IMREAD_UNCHANGED)
    assert image.shape == (500, 500, 3)
