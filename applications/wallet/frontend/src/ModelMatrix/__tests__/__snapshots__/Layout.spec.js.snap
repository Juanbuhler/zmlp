// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ModelMatrixLayout /> should render properly 1`] = `
.emotion-0 {
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 16px;
  border-bottom: 1px solid #191919;
  font-size: 17px;
  line-height: 20px;
  background-color: #252525;
}

.emotion-2 {
  font-weight: 700;
  padding-right: 4px;
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  background-color: #252525;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  border-left: 1px solid #191919;
}

.emotion-5 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  border-radius: 0;
  padding: 8px;
  white-space: nowrap;
  font-size: 15px;
  line-height: 19px;
  font-weight: 500;
  border: none;
  cursor: pointer;
  color: #808080;
  background-color: transparent;
  padding-top: 16px;
  padding-bottom: 16px;
  border-bottom: 1px solid #191919;
}

.emotion-5:hover,
.emotion-5.focus-visible:focus,
.emotion-5 .noop {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #ffffff;
}

.emotion-5:hover svg,
.emotion-5.focus-visible:focus svg,
.emotion-5 .noop svg {
  opacity: 1;
}

.emotion-5[aria-disabled=true],
.emotion-5 .noop {
  color: #808080;
}

.emotion-5:hover {
  background-color: #2e2e2e;
}

<div
  className="emotion-0"
>
  <div
    className="emotion-1"
  >
    <span
      className="emotion-2"
    >
      Overall Accuracy:
    </span>
    98%
    <ModelMatrixControls
      dispatch={[Function]}
      settings={
        Object {
          "defaultMax": 1,
          "defaultMin": 0,
          "height": 0,
          "isMinimapOpen": true,
          "isNormalized": true,
          "isPreviewOpen": false,
          "labelsWidth": 100,
          "maxScore": 1,
          "minScore": 0,
          "selectedCell": Array [],
          "width": 0,
          "zoom": 1,
        }
      }
    />
  </div>
  <div
    className="emotion-3"
  >
    <ModelMatrixMatrix
      dispatch={[Function]}
      settings={
        Object {
          "defaultMax": 1,
          "defaultMin": 0,
          "height": 0,
          "isMinimapOpen": true,
          "isNormalized": true,
          "isPreviewOpen": false,
          "labelsWidth": 100,
          "maxScore": 1,
          "minScore": 0,
          "selectedCell": Array [],
          "width": 0,
          "zoom": 1,
        }
      }
    />
    <div
      className="emotion-4"
    >
      <button
        aria-label="Preview"
        className="emotion-5"
        onClick={[Function]}
        title="Preview"
        type="button"
      >
        <svg
          data-file-name="preview.svg"
          width={20}
        />
      </button>
    </div>
  </div>
</div>
`;

exports[`<ModelMatrixLayout /> should render properly 2`] = `
.emotion-0 {
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 16px;
  border-bottom: 1px solid #191919;
  font-size: 17px;
  line-height: 20px;
  background-color: #252525;
}

.emotion-2 {
  font-weight: 700;
  padding-right: 4px;
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  background-color: #252525;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  border-left: 1px solid #191919;
}

.emotion-5 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  border-radius: 0;
  padding: 8px;
  white-space: nowrap;
  font-size: 15px;
  line-height: 19px;
  font-weight: 500;
  border: none;
  cursor: pointer;
  color: #73b61c;
  background-color: transparent;
  padding-top: 16px;
  padding-bottom: 16px;
  border-bottom: 1px solid #191919;
}

.emotion-5:hover,
.emotion-5.focus-visible:focus,
.emotion-5 .noop {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #ffffff;
}

.emotion-5:hover svg,
.emotion-5.focus-visible:focus svg,
.emotion-5 .noop svg {
  opacity: 1;
}

.emotion-5[aria-disabled=true],
.emotion-5 .noop {
  color: #808080;
}

.emotion-5:hover {
  background-color: #2e2e2e;
}

<div
  className="emotion-0"
>
  <div
    className="emotion-1"
  >
    <span
      className="emotion-2"
    >
      Overall Accuracy:
    </span>
    98%
    <ModelMatrixControls
      dispatch={[Function]}
      settings={
        Object {
          "defaultMax": 1,
          "defaultMin": 0,
          "height": 0,
          "isMinimapOpen": true,
          "isNormalized": true,
          "isPreviewOpen": true,
          "labelsWidth": 100,
          "maxScore": 1,
          "minScore": 0,
          "selectedCell": Array [],
          "width": 0,
          "zoom": 1,
        }
      }
    />
  </div>
  <div
    className="emotion-3"
  >
    <ModelMatrixMatrix
      dispatch={[Function]}
      settings={
        Object {
          "defaultMax": 1,
          "defaultMin": 0,
          "height": 0,
          "isMinimapOpen": true,
          "isNormalized": true,
          "isPreviewOpen": true,
          "labelsWidth": 100,
          "maxScore": 1,
          "minScore": 0,
          "selectedCell": Array [],
          "width": 0,
          "zoom": 1,
        }
      }
    />
    <div
      className="emotion-4"
    >
      <button
        aria-label="Preview"
        className="emotion-5"
        onClick={[Function]}
        title="Preview"
        type="button"
      >
        <svg
          data-file-name="preview.svg"
          width={20}
        />
      </button>
    </div>
  </div>
</div>
`;
