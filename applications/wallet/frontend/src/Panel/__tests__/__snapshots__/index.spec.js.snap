// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Panel /> should render properly with a selection 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  background-color: #252525;
  margin-left: 1px;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 8px;
  padding-left: 16px;
  border-bottom: 1px solid #3b3b3b;
}

.emotion-2 {
  white-space: nowrap;
  text-transform: uppercase;
  font-weight: 500;
  font-size: 15px;
  line-height: 19px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-3 {
  -webkit-flex: 0;
  -ms-flex: 0;
  flex: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  border-radius: 2px;
  padding: 0;
  white-space: nowrap;
  font-size: 15px;
  line-height: 19px;
  font-weight: 500;
  border: none;
  cursor: pointer;
  color: #808080;
  background-color: transparent;
}

.emotion-3:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-3[aria-disabled=true] {
  color: #808080;
}

.emotion-3:hover,
.emotion-3.focus-visible:focus {
  color: #ffffff;
}

.emotion-3:hover svg,
.emotion-3.focus-visible:focus svg {
  opacity: 1;
}

.emotion-4 {
  -webkit-transform: rotate(90deg);
  -moz-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  height: 0%;
}

<Resizeable
  header={
    <PanelHeader
      dispatch={[Function]}
      minWidth={400}
      openPanel="filters"
    >
      Object {
        "filters": Object {
          "content": <div />,
          "icon": <Unknown
            height={20}
          />,
          "title": "Filters",
        },
      }
    </PanelHeader>
  }
  isDisabled={false}
  isInitiallyOpen={false}
  minSize={400}
  onMouseUp={[Function]}
  openToThe="right"
  storageName="rightOpeningPanelSettings"
>
  <div
    className="emotion-0"
  >
    <div
      className="emotion-1"
    >
      <h2
        className="emotion-2"
      >
        Filters
      </h2>
      <button
        aria-label="Close Panel"
        className="emotion-3"
        onClick={[Function]}
        type="button"
      >
        <svg
          className="emotion-4"
          data-file-name="doubleChevron.svg"
          height={20}
        />
      </button>
    </div>
    <div
      className="emotion-5"
    >
      <div />
    </div>
  </div>
</Resizeable>
`;

exports[`<Panel /> should render properly without a selection 1`] = `
<Resizeable
  header={
    <PanelHeader
      dispatch={[Function]}
      minWidth={400}
      openPanel=""
    >
      Object {
        "filters": Object {
          "content": <div />,
          "icon": <Unknown
            height={20}
          />,
          "title": "Filters",
        },
      }
    </PanelHeader>
  }
  isDisabled={true}
  isInitiallyOpen={false}
  minSize={400}
  onMouseUp={[Function]}
  openToThe="left"
  storageName="leftOpeningPanelSettings"
/>
`;
