// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FaceLabelingTrainApply /> should render properly when there are no unapplied changes and no training job 1`] = `
.emotion-2 {
  padding: 16px;
  border-bottom: 1px solid #3b3b3b;
}

.emotion-0 {
  height: 16px;
}

.emotion-1 {
  -webkit-flex: 0;
  -ms-flex: 0;
  flex: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 2px;
  margin: 0;
  padding: 12px 32px;
  white-space: nowrap;
  font-size: 15px;
  line-height: 19px;
  font-weight: 500;
  border: none;
  cursor: not-allowed;
  color: #ffffff;
  background-color: transparent;
}

.emotion-1:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-1[aria-disabled=true] {
  color: #2e2e2e;
}

.emotion-1,
.emotion-1:hover,
.emotion-1:visited {
  background-color: #73b61c;
}

.emotion-1:hover {
  background-color: #96c955;
}

.emotion-1[aria-disabled=true] {
  background-color: #808080;
}

<div
  className="emotion-2"
>
  
  <span>
    Once a name has been added to a face, training can begin. Names can continue to be edited as needed.
  </span>
  <div
    className="emotion-0"
  />
  <button
    aria-disabled={true}
    className="emotion-1"
    onClick={[Function]}
    type="button"
  >
    Train & Apply
  </button>
</div>
`;

exports[`<FaceLabelingTrainApply /> should render properly when there are unapplied changes and a training job 1`] = `
.emotion-6 {
  padding: 16px;
  border-bottom: 1px solid #3b3b3b;
}

.emotion-4 {
  height: 16px;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  background-color: #cfe5ff;
  border-radius: 2px;
  padding: 12px;
}

.emotion-1 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding-left: 12px;
  color: #191919;
  font-weight: 500;
}

.emotion-0 {
  color: #4a90e2;
}

.emotion-0:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-3 {
  padding-bottom: 16px;
}

.emotion-5 {
  -webkit-flex: 0;
  -ms-flex: 0;
  flex: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 2px;
  margin: 0;
  padding: 12px 32px;
  white-space: nowrap;
  font-size: 15px;
  line-height: 19px;
  font-weight: 500;
  border: none;
  cursor: pointer;
  color: #ffffff;
  background-color: transparent;
}

.emotion-5:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-5[aria-disabled=true] {
  color: #2e2e2e;
}

.emotion-5,
.emotion-5:hover,
.emotion-5:visited {
  background-color: #73b61c;
}

.emotion-5:hover {
  background-color: #96c955;
}

.emotion-5[aria-disabled=true] {
  background-color: #808080;
}

<div
  className="emotion-6"
>
  <div
    className="emotion-2"
  >
    <svg
      color="#4a90e2"
      data-file-name="generating.svg"
      width={20}
    />
    <div
      className="emotion-1"
      role="alert"
    >
      Face training in progress.
       
      <a
        className="emotion-0"
        href="/76917058-b147-4556-987a-0a0f11e46d9b/jobs/1a1d45af-7477-1396-ae57-a618e8efb91f"
        onClick={[Function]}
        onMouseEnter={[Function]}
      >
        Check status.
      </a>
    </div>
  </div>
  <div
    className="emotion-3"
  />
  <span>
    Once a name has been added to a face, training can begin. Names can continue to be edited as needed.
  </span>
  <div
    className="emotion-4"
  />
  <button
    className="emotion-5"
    onClick={[Function]}
    type="button"
  >
    Override Current Training & Re-apply
  </button>
</div>
`;
