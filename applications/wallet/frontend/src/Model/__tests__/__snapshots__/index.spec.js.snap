// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Model /> should render properly after linking 1`] = `
Array [
  <Breadcrumbs
    crumbs={
      Array [
        Object {
          "href": "/[projectId]/models",
          "isBeta": true,
          "title": "Custom Models",
        },
        Object {
          "href": false,
          "title": "Model Details",
        },
      ]
    }
  />,
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding-top: 8px;
  padding-bottom: 16px;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  background-color: #e3f7e8;
  border-radius: 2px;
  padding: 12px;
  padding-left: 16px;
  padding-right: 16px;
}

.emotion-2 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding-left: 12px;
  color: #191919;
  font-weight: 500;
  white-space: pre-line;
}

.emotion-2 a {
  color: #191919;
  -webkit-text-decoration: underline;
  text-decoration: underline;
  margin-left: 4px;
}

.emotion-2 a:hover {
  color: #3A5DFF;
}

<div
    className="emotion-0"
  >
    <div
      className="emotion-1"
    >
      <svg
        color="#009f22"
        data-file-name="checkmark.svg"
        height={20}
      />
      <div
        className="emotion-2"
        role="alert"
      >
        Dataset 
        linked
        .
      </div>
    </div>
  </div>,
  <ModelDetails
    modelId="621bf775-89d9-1244-9596-d6df43f1ede5"
    modelTypes={
      Array [
        Object {
          "deployOnTrainingSet": true,
          "description": "Classify images, documents and video clips using a KNN classifier.  This type of model can work great with just a single labeled example.If no labels are provided, the model automatically generates numbered groups of similar assets. These groups can be renamed and edited in subsequent training passes.",
          "label": "K-Nearest Neighbors Classifier",
          "minConcepts": 0,
          "minExamples": 0,
          "name": "KNN_CLASSIFIER",
          "objective": "Label Detection",
          "provider": "Boon AI",
        },
        Object {
          "deployOnTrainingSet": false,
          "description": "Classify images or documents using a custom strained CNN deep learning algorithm.  This type of modelgenerates multiple predictions and can be trained to identify very specific features. The label detection classifier requires at least 2 concepts with 10 labeled images each.",
          "label": "Tensorflow Transfer Learning Classifier",
          "minConcepts": 2,
          "minExamples": 10,
          "name": "TF_CLASSIFIER",
          "objective": "Label Detection",
          "provider": "Boon AI",
        },
        Object {
          "deployOnTrainingSet": true,
          "description": "Label faces detected by the boonai-face-detection module, and classify them with a KNN model.",
          "label": "Face Recognition",
          "minConcepts": 1,
          "minExamples": 1,
          "name": "FACE_RECOGNITION",
          "objective": "Face Recognition",
          "provider": "Boon AI",
        },
        Object {
          "deployOnTrainingSet": true,
          "description": "Upload a pre-trained Pytorch Model Archive",
          "label": "A Pytorch Model Archive. image_classifier, image_segmenter, object_detector, or text_classifier.",
          "minConcepts": 0,
          "minExamples": 0,
          "name": "PYTORCH_MODEL_ARCHIVE",
          "objective": "Label Detection",
          "provider": "Boon AI",
        },
      ]
    }
    projectId="76917058-b147-4556-987a-0a0f11e46d9b"
  />,
  .emotion-0 {
  padding: 16px;
  padding-left: 0;
  padding-right: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-1 {
  list-style-type: none;
  padding: 0;
  margin: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-bottom: 1px solid #4a4a4a;
}

.emotion-2 {
  padding-right: 16px;
  margin-bottom: -1px;
}

.emotion-3 {
  border: 0 #3A5DFF solid;
  border-bottom-width: 2px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-top: 8px;
  padding-bottom: 8px;
  text-transform: uppercase;
  font-size: 17px;
  line-height: 20px;
  font-weight: 700;
}

.emotion-3:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-5 {
  border: 0 #3A5DFF solid;
  border-bottom-width: 0;
  color: #b3b3b3;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-top: 8px;
  padding-bottom: 8px;
  text-transform: uppercase;
  font-size: 17px;
  line-height: 20px;
  font-weight: 700;
}

.emotion-5:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3A5DFF;
}

<nav
    className="emotion-0"
  >
    <ul
      className="emotion-1"
    >
      <li
        className="emotion-2"
      >
        <a
          className="emotion-3"
          href="/76917058-b147-4556-987a-0a0f11e46d9b/models/621bf775-89d9-1244-9596-d6df43f1ede5"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Dataset
        </a>
      </li>
      <li
        className="emotion-2"
      >
        <a
          className="emotion-5"
          href="/76917058-b147-4556-987a-0a0f11e46d9b/models/621bf775-89d9-1244-9596-d6df43f1ede5/deployment"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Deployment
        </a>
      </li>
    </ul>
  </nav>,
  <ModelDataset
    setErrors={[Function]}
  />,
]
`;

exports[`<Model /> should render properly after unlinking 1`] = `
Array [
  <Breadcrumbs
    crumbs={
      Array [
        Object {
          "href": "/[projectId]/models",
          "isBeta": true,
          "title": "Custom Models",
        },
        Object {
          "href": false,
          "title": "Model Details",
        },
      ]
    }
  />,
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding-top: 8px;
  padding-bottom: 16px;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  background-color: #e3f7e8;
  border-radius: 2px;
  padding: 12px;
  padding-left: 16px;
  padding-right: 16px;
}

.emotion-2 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding-left: 12px;
  color: #191919;
  font-weight: 500;
  white-space: pre-line;
}

.emotion-2 a {
  color: #191919;
  -webkit-text-decoration: underline;
  text-decoration: underline;
  margin-left: 4px;
}

.emotion-2 a:hover {
  color: #3A5DFF;
}

<div
    className="emotion-0"
  >
    <div
      className="emotion-1"
    >
      <svg
        color="#009f22"
        data-file-name="checkmark.svg"
        height={20}
      />
      <div
        className="emotion-2"
        role="alert"
      >
        Dataset 
        unlinked
        .
      </div>
    </div>
  </div>,
  <ModelDetails
    modelId="621bf775-89d9-1244-9596-d6df43f1ede5"
    modelTypes={
      Array [
        Object {
          "deployOnTrainingSet": true,
          "description": "Classify images, documents and video clips using a KNN classifier.  This type of model can work great with just a single labeled example.If no labels are provided, the model automatically generates numbered groups of similar assets. These groups can be renamed and edited in subsequent training passes.",
          "label": "K-Nearest Neighbors Classifier",
          "minConcepts": 0,
          "minExamples": 0,
          "name": "KNN_CLASSIFIER",
          "objective": "Label Detection",
          "provider": "Boon AI",
        },
        Object {
          "deployOnTrainingSet": false,
          "description": "Classify images or documents using a custom strained CNN deep learning algorithm.  This type of modelgenerates multiple predictions and can be trained to identify very specific features. The label detection classifier requires at least 2 concepts with 10 labeled images each.",
          "label": "Tensorflow Transfer Learning Classifier",
          "minConcepts": 2,
          "minExamples": 10,
          "name": "TF_CLASSIFIER",
          "objective": "Label Detection",
          "provider": "Boon AI",
        },
        Object {
          "deployOnTrainingSet": true,
          "description": "Label faces detected by the boonai-face-detection module, and classify them with a KNN model.",
          "label": "Face Recognition",
          "minConcepts": 1,
          "minExamples": 1,
          "name": "FACE_RECOGNITION",
          "objective": "Face Recognition",
          "provider": "Boon AI",
        },
        Object {
          "deployOnTrainingSet": true,
          "description": "Upload a pre-trained Pytorch Model Archive",
          "label": "A Pytorch Model Archive. image_classifier, image_segmenter, object_detector, or text_classifier.",
          "minConcepts": 0,
          "minExamples": 0,
          "name": "PYTORCH_MODEL_ARCHIVE",
          "objective": "Label Detection",
          "provider": "Boon AI",
        },
      ]
    }
    projectId="76917058-b147-4556-987a-0a0f11e46d9b"
  />,
  .emotion-0 {
  padding: 16px;
  padding-left: 0;
  padding-right: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-1 {
  list-style-type: none;
  padding: 0;
  margin: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-bottom: 1px solid #4a4a4a;
}

.emotion-2 {
  padding-right: 16px;
  margin-bottom: -1px;
}

.emotion-3 {
  border: 0 #3A5DFF solid;
  border-bottom-width: 2px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-top: 8px;
  padding-bottom: 8px;
  text-transform: uppercase;
  font-size: 17px;
  line-height: 20px;
  font-weight: 700;
}

.emotion-3:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-5 {
  border: 0 #3A5DFF solid;
  border-bottom-width: 0;
  color: #b3b3b3;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-top: 8px;
  padding-bottom: 8px;
  text-transform: uppercase;
  font-size: 17px;
  line-height: 20px;
  font-weight: 700;
}

.emotion-5:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3A5DFF;
}

<nav
    className="emotion-0"
  >
    <ul
      className="emotion-1"
    >
      <li
        className="emotion-2"
      >
        <a
          className="emotion-3"
          href="/76917058-b147-4556-987a-0a0f11e46d9b/models/621bf775-89d9-1244-9596-d6df43f1ede5"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Dataset
        </a>
      </li>
      <li
        className="emotion-2"
      >
        <a
          className="emotion-5"
          href="/76917058-b147-4556-987a-0a0f11e46d9b/models/621bf775-89d9-1244-9596-d6df43f1ede5/deployment"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Deployment
        </a>
      </li>
    </ul>
  </nav>,
  <ModelDataset
    setErrors={[Function]}
  />,
]
`;

exports[`<Model /> should render properly for deployment 1`] = `
Array [
  <Breadcrumbs
    crumbs={
      Array [
        Object {
          "href": "/[projectId]/models",
          "isBeta": true,
          "title": "Custom Models",
        },
        Object {
          "href": false,
          "title": "Model Details",
        },
      ]
    }
  />,
  <ModelDetails
    modelId="621bf775-89d9-1244-9596-d6df43f1ede5"
    modelTypes={
      Array [
        Object {
          "deployOnTrainingSet": true,
          "description": "Classify images, documents and video clips using a KNN classifier.  This type of model can work great with just a single labeled example.If no labels are provided, the model automatically generates numbered groups of similar assets. These groups can be renamed and edited in subsequent training passes.",
          "label": "K-Nearest Neighbors Classifier",
          "minConcepts": 0,
          "minExamples": 0,
          "name": "KNN_CLASSIFIER",
          "objective": "Label Detection",
          "provider": "Boon AI",
        },
        Object {
          "deployOnTrainingSet": false,
          "description": "Classify images or documents using a custom strained CNN deep learning algorithm.  This type of modelgenerates multiple predictions and can be trained to identify very specific features. The label detection classifier requires at least 2 concepts with 10 labeled images each.",
          "label": "Tensorflow Transfer Learning Classifier",
          "minConcepts": 2,
          "minExamples": 10,
          "name": "TF_CLASSIFIER",
          "objective": "Label Detection",
          "provider": "Boon AI",
        },
        Object {
          "deployOnTrainingSet": true,
          "description": "Label faces detected by the boonai-face-detection module, and classify them with a KNN model.",
          "label": "Face Recognition",
          "minConcepts": 1,
          "minExamples": 1,
          "name": "FACE_RECOGNITION",
          "objective": "Face Recognition",
          "provider": "Boon AI",
        },
        Object {
          "deployOnTrainingSet": true,
          "description": "Upload a pre-trained Pytorch Model Archive",
          "label": "A Pytorch Model Archive. image_classifier, image_segmenter, object_detector, or text_classifier.",
          "minConcepts": 0,
          "minExamples": 0,
          "name": "PYTORCH_MODEL_ARCHIVE",
          "objective": "Label Detection",
          "provider": "Boon AI",
        },
      ]
    }
    projectId="76917058-b147-4556-987a-0a0f11e46d9b"
  />,
  .emotion-0 {
  padding: 16px;
  padding-left: 0;
  padding-right: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-1 {
  list-style-type: none;
  padding: 0;
  margin: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-bottom: 1px solid #4a4a4a;
}

.emotion-2 {
  padding-right: 16px;
  margin-bottom: -1px;
}

.emotion-3 {
  border: 0 #3A5DFF solid;
  border-bottom-width: 0;
  color: #b3b3b3;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-top: 8px;
  padding-bottom: 8px;
  text-transform: uppercase;
  font-size: 17px;
  line-height: 20px;
  font-weight: 700;
}

.emotion-3:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3A5DFF;
}

.emotion-5 {
  border: 0 #3A5DFF solid;
  border-bottom-width: 2px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-top: 8px;
  padding-bottom: 8px;
  text-transform: uppercase;
  font-size: 17px;
  line-height: 20px;
  font-weight: 700;
}

.emotion-5:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

<nav
    className="emotion-0"
  >
    <ul
      className="emotion-1"
    >
      <li
        className="emotion-2"
      >
        <a
          className="emotion-3"
          href="/76917058-b147-4556-987a-0a0f11e46d9b/models/621bf775-89d9-1244-9596-d6df43f1ede5"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Dataset
        </a>
      </li>
      <li
        className="emotion-2"
      >
        <a
          className="emotion-5"
          href="/76917058-b147-4556-987a-0a0f11e46d9b/models/621bf775-89d9-1244-9596-d6df43f1ede5/deployment"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Deployment
        </a>
      </li>
    </ul>
  </nav>,
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.emotion-1 {
  font-size: 21px;
  line-height: 30px;
  font-weight: 500;
  padding-top: 16px;
}

.emotion-2 {
  color: #b3b3b3;
  padding-top: 16px;
  padding-bottom: 16px;
}

.emotion-3 {
  color: #6088FE;
}

.emotion-4 {
  margin: 0;
  padding: 0;
  list-style: none;
  line-height: 23px;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-6 {
  color: #b3b3b3;
  font-family: Roboto Condensed;
  text-transform: uppercase;
  padding-right: 8px;
}

.emotion-8 {
  padding-left: 4px;
}

.emotion-9 {
  position: relative;
}

.emotion-10 {
  -webkit-flex: 0;
  -ms-flex: 0;
  flex: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  border-radius: 2px;
  padding: 8px;
  white-space: nowrap;
  font-size: 15px;
  line-height: 19px;
  font-weight: 500;
  border: none;
  cursor: pointer;
  color: #808080;
  background-color: transparent;
}

.emotion-10:hover,
.emotion-10.focus-visible:focus,
.emotion-10 .noop {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #ffffff;
}

.emotion-10:hover svg,
.emotion-10.focus-visible:focus svg,
.emotion-10 .noop svg {
  opacity: 1;
}

.emotion-10[aria-disabled=true],
.emotion-10 .noop {
  color: #808080;
}

<div
    className="emotion-0"
  >
    <h3
      className="emotion-1"
    >
      Model REST API
    </h3>
    <div
      className="emotion-2"
    >
      This model is deployed as an easy to use REST API for integration into software projects.
       
      <a
        className="emotion-3"
        href="https://docs.boonai.app/boonsdk/solutions"
        rel="noopener noreferrer"
        target="_blank"
      >
        See Documentation
      </a>
    </div>
    <ul
      className="emotion-4"
    >
      <li
        className="emotion-5"
      >
        <div
          className="emotion-6"
        >
          Model Endpoint
          :
        </div>
        <div
          className="emotion-5"
        >
          https://api.boonai.app/ap1/v1/analyze-file?modules=undefined
          <div
            className="emotion-8"
          >
            <div
              className="emotion-9"
            >
              <button
                aria-label="Copy URL to Clipboard"
                className="emotion-10"
                onClick={[Function]}
                title="Copy URL to Clipboard"
                type="button"
              >
                <svg
                  data-file-name="copy.svg"
                  height={20}
                />
              </button>
            </div>
          </div>
        </div>
      </li>
    </ul>
  </div>,
]
`;
