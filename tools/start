#!/bin/sh
#
# Shamelessly copied from:
# https://github.com/elastic/elasticsearch/tree/master/distribution/src/main/resources/bin
#

SCRIPT="$0"

# SCRIPT may be an arbitrarily deep series of symlinks. Loop until we have the concrete path.
while [ -h "$SCRIPT" ] ; do
  ls=`ls -ld "$SCRIPT"`
  # Drop everything prior to ->
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    SCRIPT="$link"
  else
    SCRIPT=`dirname "$SCRIPT"`/"$link"
  fi
done

APP_NAME="%{application}"

# determine home
APP_HOME=`dirname "$SCRIPT"`/..
cd ${APP_HOME}
export APP_HOME=`pwd`

# If an include wasn't specified in the environment, then search for one...
if [ "x$APP_INCLUDE" = "x" ]; then
    # Locations (in order) to use when searching for an include file.
    for include in /usr/share/${APP_NAME}/${APP_NAME}.in.sh \
                   /usr/local/share/${APP_NAME}/${APP_NAME}.in.sh \
                   /opt/${APP_NAME}/${APP_NAME}.in.sh \
                   ~/.${APP_NAME}.in.sh \
                   $APP_HOME/bin/${APP_NAME}.in.sh \
                   "`dirname "$0"`"/${APP_NAME}.in.sh; do
        if [ -r "$include" ]; then
            . "$include"
            break
        fi
    done
# ...otherwise, source the specified include.
elif [ -r "$APP_INCLUDE" ]; then
    . "$APP_INCLUDE"
fi

if [ -x "$JAVA_HOME/bin/java" ]; then
    JAVA="$JAVA_HOME/bin/java"
else
    JAVA=`which java`
fi

if [ ! -x "$JAVA" ]; then
    echo "Could not find any executable java binary. Please install java in your PATH or set JAVA_HOME"
    exit 1
fi

# Special-case path variables.
case `uname` in
    CYGWIN*)
        APP_HOME=`cygpath -p -w "$APP_HOME"`
    ;;
esac

usage=`echo $* | egrep -- '(^-h |-h$| -h |--help$|--help )'`
if [ "x$usage" != "x" ]; then
    echo "Usage: $0 [-dh] [--pidfile pidfile] [--prop=value]"
    echo "Start server."
    echo "    -d                    daemonize (run in background)"
    echo "    --pidfile=path        write PID file to <path>"
    echo "    --help                print command line options"
    echo "   --prop=val             set server configurtion property"
    echo
    exit 0;
fi

daemonized=`echo $* | egrep -- '(^-d |-d$| -d |--daemonize$|--daemonize )'`
app_parms=""

if [ "x$daemonized" = "x" ]; then
    exec "$JAVA" -jar $JAVA_OPTS $APP_JAVA_OPTS $app_parms \
            -Dserver.path.home="$APP_HOME" -D%{application}.path.home="${APP_HOME}" \
            -Des.config="$APP_HOME"/config/elasticsearch.yml \
            -Dspring.config.location="$APP_HOME"/config/ \
            "$APP_HOME"/lib/${APP_NAME}.jar "$@"
else
    exec "$JAVA" -jar $JAVA_OPTS $APP_JAVA_OPTS $app_parms \
        -Dserver.path.home="$APP_HOME" -D%{application}.path.home="${APP_HOME}" \
        -Des.config="$APP_HOME"/config/elasticsearch.yml \
        -Dspring.config.location="$APP_HOME"/config/ \
        -Dlogging.config="$APP_HOME"/config/logback.xml \
        "$APP_HOME"/lib/${APP_NAME}.jar "$@" <&- &

    retval=$?
    pid=$!
    [ $retval -eq 0 ] || exit $retval
    if ! ps -p $pid > /dev/null ; then
      exit 1
    fi
    exit 0
fi

exit $?
