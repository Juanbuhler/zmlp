#!/usr/bin/env python
import argparse
import subprocess
import yaml

def main():
    parser = argparse.ArgumentParser(prog="zsdeploy")
    parser.add_argument("project", help="The project to build")
    parser.add_argument("-p", "--push", action="store_true", help="push to GCP container registry")
    parser.add_argument("-d", "--deploy", action="store_true", help="Deploy latest version")

    args = parser.parse_args()
    app = yaml.load(open("app.yaml"))
    print app
    build_docker_image(args.project, app)

    if args.push:
        push_to_gcp(args.project, app)

    if args.deploy:
        deploy_to_app_engine(args.project, app)


def build_docker_image(project, app):
    print "Building docker image: %s:%s" % (project, app["service"])
    cmd = ["docker", "build", "-t", get_image_name(project, app), "--build-arg", "project=%s" %project, "."]
    print cmd
    subprocess.call(cmd, shell=False)

def get_image_name(project, app):
    return "gcr.io/%s/%s:latest" % (project, app["service"])

def push_to_gcp(project, app):
    image = get_image_name(project, app)
    cmd = ["docker", "push", image]
    print cmd
    subprocess.call(cmd, shell=False)

def deploy_to_app_engine(project, app):
    image = get_image_name(project, app)
    cmd = ["gcloud", "app", "deploy", "app.yaml", "--project", project, "--image-url", image]
    print cmd
    subprocess.call(cmd, shell=False)


if __name__ == '__main__':
    main()

