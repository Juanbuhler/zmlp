#!/usr/bin/env python
import argparse
import subprocess
import yaml
import json
import shutil
import logging

logger = logging.getLogger(__name__)

def main():
    parser = argparse.ArgumentParser(prog="estool")
    parser.add_argument("project", help="The project to build for.")
    parser.add_argument("-b", "--build", action="store_true", help="Recompile jar file")
    parser.add_argument("-t", "--type", help="Node type", choices=["single", "data", "client", "master"], default="single")

    args = parser.parse_args()
    project = args.project
    node_type = args.type

    copy_plugins()
    build_docker_image(project, node_type)

def build_docker_image(project, node_type):
    print "Building docker image: %s:elasticsearch-%s" % (project, node_type)
    cmd = ["docker", "build", "-t", get_image_name(project, node_type), "--build-arg", "project=%s" %project, "."]
    print cmd
    subprocess.call(cmd, shell=False)

def get_image_name(project, node_type):
    return "gcr.io/%s/elasticsearch-%s:latest" % (project, node_type)

def copy_plugins():
    src_file = "../es-similarity/target/releases/es-similarity.zip"
    dst_file = "."
    logger.info("copy: %s -> %s" % (src_file, dst_file))
    shutil.copy(src_file, dst_file)


if __name__ == '__main__':
    main()